kind: Namespace
apiVersion: v1
metadata:
  name: local
  # labels:
  #   argocd.argoproj.io/managed-by: argocd
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
  namespace: local
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM= # printf postgres | base64
  POSTGRES_PASSWORD: cGFzc3dvcmQ= # printf password | base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres
  namespace: local
data:
  POSTGRES_DB: postgres
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres
  namespace: local
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 8Gi
  hostPath:
    path: /mnt/data/postgres
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
  namespace: local
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
  volumeName: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: local
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: postgres
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: local
spec:
  selector:
    app: postgres
  type: NodePort
  ports:
    - port: 5432
      targetPort: 5432
      nodePort: 30432
